AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Sitio web con AWS SAM

Parameters:
  DomainName:
    Type: String
    Description: 'Nombre de dominio'
    Default: 'demo-chile-14032023'
  IndexDocument:
    Type: String
    Description: 'Documento index'
    Default: 'index.html'

Resources:
  CloudFrontOriginAccessIdentity:
    Type: 'AWS::CloudFront::CloudFrontOriginAccessIdentity'
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: 'Desplegando un sitio web con AWS SAM'

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref DomainName

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action: 's3:GetObject'
            Resource:
              - !Sub 'arn:aws:s3:::${S3Bucket}/*'
            Principal:
              AWS: !Sub 'arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginAccessIdentity}'

  RewriteRequestFunction:
    Type: AWS::CloudFront::Function
    Properties:
      Name: !Sub '${AWS::StackName}-req'
      AutoPublish: true
      FunctionCode: !Sub |
        function handler(event) {
          var request = event.request;
          var uri = request.uri
          if (uri.includes('.') && !uri.endsWith('.html')) {
              return request;
          }
          request.uri = '/${IndexDocument}';
          return request;
        }
      FunctionConfig:
        Comment: !Sub 'rewrite sub-directory path with trailing /${IndexDocument}'
        Runtime: cloudfront-js-1.0

  CloudfrontDistribution:
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig:
        Comment: 'Cloudfront distribution'
        DefaultRootObject: 'index.html'
        Enabled: true
        HttpVersion: http2
        Origins:
          - Id: s3-website
            DomainName: !Sub '${S3Bucket}.s3.${AWS::Region}.amazonaws.com'
            S3OriginConfig:
              OriginAccessIdentity:
                Fn::Sub: 'origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}'
        DefaultCacheBehavior:
          Compress: 'true'
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          ForwardedValues:
            QueryString: false
          TargetOriginId: s3-website
          ViewerProtocolPolicy: redirect-to-https
          FunctionAssociations:
            - EventType: viewer-request
              FunctionARN: !GetAtt RewriteRequestFunction.FunctionMetadata.FunctionARN

Outputs:
  BucketName:
    Description: 'The S3 bucket name where HTML files need to be uploaded'
    Value: !Ref S3Bucket
  CloudFrontDistribution:
    Description: 'The CloudFront distribution in front of the S3 bucket'
    Value: !Ref CloudfrontDistribution
  WebsiteUrl:
    Description: 'The website URL'
    Value: !GetAtt CloudfrontDistribution.DomainName
